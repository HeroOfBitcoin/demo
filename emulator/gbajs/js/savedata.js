class SRAMSavedata extends MemoryView{constructor(a){super(new ArrayBuffer(a),0),this.writePending=!1}store8(a,b){this.view.setInt8(a,b),this.writePending=!0}store16(a,b){this.view.setInt16(a,b,!0),this.writePending=!0}store32(a,b){this.view.setInt32(a,b,!0),this.writePending=!0}}class FlashSavedata extends MemoryView{constructor(a){super(new ArrayBuffer(a),0),this.COMMAND_WIPE=16,this.COMMAND_ERASE_SECTOR=48,this.COMMAND_ERASE=128,this.COMMAND_ID=144,this.COMMAND_WRITE=160,this.COMMAND_SWITCH_BANK=176,this.COMMAND_TERMINATE_ID=240,this.ID_PANASONIC=6962,this.ID_SANYO=4962,this.bank0=new DataView(this.buffer,0,65536),a>65536?(this.id=this.ID_SANYO,this.bank1=new DataView(this.buffer,65536)):(this.id=this.ID_PANASONIC,this.bank1=null),this.bank=this.bank0,this.idMode=!1,this.writePending=!1,this.first=0,this.second=0,this.command=0,this.pendingCommand=0}load8(a){return this.idMode&&a<2?this.id>>(a<<3)&255:a<65536?this.bank.getInt8(a):0}load16(a){return this.load8(a)&255|this.load8(a+1)<<8}load32(a){return this.load8(a)&255|this.load8(a+1)<<8|this.load8(a+2)<<16|this.load8(a+3)<<24}loadU8(a){return this.load8(a)&255}loadU16(a){return this.loadU8(a)&255|this.loadU8(a+1)<<8}store8(a,b){var c;switch(this.command){case 0:if(a==21845)if(this.second==85){switch(b){case this.COMMAND_ERASE:this.pendingCommand=b;break;case this.COMMAND_ID:this.idMode=!0;break;case this.COMMAND_TERMINATE_ID:this.idMode=!1;break;default:this.command=b;break}this.second=0,this.first=0}else this.command=0,this.first=b,this.idMode=!1;else a==10922&&this.first==170&&(this.first=0,this.pendingCommand?this.command=this.pendingCommand:this.second=b);break;case this.COMMAND_ERASE:switch(b){case this.COMMAND_WIPE:if(a==21845)for(c=0;c<this.view.byteLength;c+=4)this.view.setInt32(c,-1);break;case this.COMMAND_ERASE_SECTOR:if((a&4095)==0)for(c=a;c<a+4096;c+=4)this.bank.setInt32(c,-1);break}this.pendingCommand=0,this.command=0;break;case this.COMMAND_WRITE:this.bank.setInt8(a,b),this.command=0,this.writePending=!0;break;case this.COMMAND_SWITCH_BANK:this.bank1&&a==0&&(b==1?this.bank=this.bank1:this.bank=this.bank0),this.command=0;break}}store16(a,b){throw new Error('Unaligned save to flash!')}store32(a,b){throw new Error('Unaligned save to flash!')}replaceData(a){var b=this.view===this.bank1;MemoryView.prototype.replaceData.call(this,a,0),this.bank0=new DataView(this.buffer,0,65536),a.byteLength>65536?this.bank1=new DataView(this.buffer,65536):this.bank1=null,this.bank=b?this.bank1:this.bank0}}class EEPROMSavedata extends MemoryView{constructor(a,b){super(new ArrayBuffer(a),0),this.writeAddress=0,this.readBitsRemaining=0,this.readAddress=0,this.command=0,this.commandBitsRemaining=0,this.realSize=0,this.addressBits=0,this.writePending=!1,this.dma=b.core.irq.dma[3],this.COMMAND_NULL=0,this.COMMAND_PENDING=1,this.COMMAND_WRITE=2,this.COMMAND_READ_PENDING=3,this.COMMAND_READ=4}load8(a){throw new Error('Unsupported 8-bit access!')}load16(a){return this.loadU16(a)}loadU8(a){throw new Error('Unsupported 8-bit access!')}loadU16(c){var a,b;return this.command!=this.COMMAND_READ||!this.dma.enable?1:(--this.readBitsRemaining,this.readBitsRemaining<64)?(a=63-this.readBitsRemaining,b=this.view.getUint8(this.readAddress+a>>3,!1)>>7-(a&7),this.readBitsRemaining||(this.command=this.COMMAND_NULL),b&1):0}load32(a){throw new Error('Unsupported 32-bit access!')}store8(a,b){throw new Error('Unsupported 8-bit access!')}store16(d,b){var a,c;switch(this.command){case this.COMMAND_NULL:default:this.command=b&1;break;case this.COMMAND_PENDING:this.command<<=1,this.command|=b&1,this.command==this.COMMAND_WRITE?(this.realSize||(a=this.dma.count-67,this.realSize=8<<a,this.addressBits=a),this.commandBitsRemaining=this.addressBits+64+1,this.writeAddress=0):(this.realSize||(a=this.dma.count-3,this.realSize=8<<a,this.addressBits=a),this.commandBitsRemaining=this.addressBits+1,this.readAddress=0);break;case this.COMMAND_WRITE:--this.commandBitsRemaining>64?(this.writeAddress<<=1,this.writeAddress|=(b&1)<<6):this.commandBitsRemaining<=0?(this.command=this.COMMAND_NULL,this.writePending=!0):(c=this.view.getUint8(this.writeAddress>>3),c&=~(1<<7-(this.writeAddress&7)),c|=(b&1)<<7-(this.writeAddress&7),this.view.setUint8(this.writeAddress>>3,c),++this.writeAddress);break;case this.COMMAND_READ_PENDING:--this.commandBitsRemaining>0?(this.readAddress<<=1,b&1&&(this.readAddress|=64)):(this.readBitsRemaining=68,this.command=this.COMMAND_READ);break}}store32(a,b){throw new Error('Unsupported 32-bit access!')}replaceData(a){MemoryView.prototype.replaceData.call(this,a,0)}}